
Raphael.leonardo={getPaletteColor:function(opts){opts=opts||{};opts.reset=opts.reset||false;if(!(this.getPaletteColor.palette)){this.getPaletteColor.palette=["rgb(229, 39, 54)","rgb(32, 141, 70)","rgb(43, 87, 169)","rgb(236, 125, 43)","rgb(102, 38, 145)","rgb(156, 25, 37)","rgb(175, 50, 148)"];this.getPaletteColor.index=0;}
var index=this.getPaletteColor.index,length=this.getPaletteColor.palette.length-1,color=this.getPaletteColor.palette[index];if((index===length)||opts.reset){this.getPaletteColor.index=0;}else{this.getPaletteColor.index=index+1;}
return opts.reset?true:color;}}
Raphael.fn.leonardo={hLine:function(x,y,width){return this.path(["M",x,y,"h",width]);},vLine:function(x,y,height){return this.path(["M",x,y,"v",height]);},line:function(x1,y1,x2,y2){return this.path(["M",x1,y1,"L",x2,y2]);},lineTo:function(x,y){if(this.cache){this.path(["M",this.cache.lastX,this.cache.lastY,"L",x,y]);}
this.cache={lastX:x,lastY:y};}};var Leonardo={};Leonardo=(function(){var paper,plotArea={},scaleValues=[],maxValue,opts,PREC=2;function extend(parent,child){var i,toStr=Object.prototype.toString,aStr="[object Array]";parent=parent||{};for(i in parent){if(parent.hasOwnProperty(i)){if(typeof parent[i]==="object"){child[i]=(toStr.call(parent[i])===aStr)?[]:{};extend(parent[i],child[i]);}else{child[i]=parent[i];}}}
return child;}
function getMaxValue(series){var data=[],item;for(item in series){if(series.hasOwnProperty(item)){data=data.concat(series[item]);}}
return Math.max.apply(Math,data);}
function init(domID,max,num_labels){maxValue=max;var paddedWidth=opts.width-(opts.padding*2),paddedHeight=opts.height-(opts.padding*2),axisAreaPercentage=1-opts.plotAreaPercentage,ratio=maxValue/opts.scaleSize,i=opts.scaleSize;plotArea.x=axisAreaPercentage*paddedWidth+opts.padding;plotArea.y=opts.padding;plotArea.width=opts.plotAreaPercentage*paddedWidth;plotArea.height=paddedHeight-(axisAreaPercentage/2*opts.height);plotArea.xOffset=(plotArea.width/num_labels/2)-opts.padding;scaleValues[0]=0;while(i--){scaleValues.push(((i+1)*ratio).toFixed(0));}
paper=new Raphael(domID,opts.width,opts.height);}
function plot(values,drawingCallback){var xStep=plotArea.width/(values.length),paddedHeight=plotArea.height+opts.padding,adjustedHeight=paddedHeight>opts.height?plotArea.height+1:paddedHeight,xOffset=plotArea.x,yOffset;values.forEach(function(value,index){xOffset+=(0===index)?3:xStep;yOffset=adjustedHeight-(value/maxValue*plotArea.height);drawingCallback(xOffset,yOffset,value);});}
function drawBorder(width,height){paper.rect(0,0,width,height);}
function drawXAxis(labels){paper.leonardo.hLine(plotArea.x,plotArea.y+plotArea.height,plotArea.width);var labelY=plotArea.y+plotArea.height,labelTextY=labelY+(2*opts.tickSize);plot(labels,function(x,y,label){x=(x+plotArea.xOffset).toFixed(PREC);paper.leonardo.vLine(x,labelY,opts.tickSize);paper.text(x,labelTextY,label);});}
function drawYAxis(){paper.leonardo.vLine(plotArea.x,plotArea.y,plotArea.height);var valueX=plotArea.x-opts.tickSize,valueTextX=plotArea.x-(3*opts.tickSize);plot(scaleValues,function(x,y,value){paper.leonardo.hLine(valueX,y,opts.tickSize);paper.text(valueTextX,y,value);});}
function getSeriesLength(series){var size=0,key;for(key in series){if(series.hasOwnProperty(key)){size+=1;}}
return size;}
return{columnChart:function(domID,series,labels,options){opts=extend(options,{width:300,height:200,padding:10,barWidth:6,tickSize:5,drawBorder:false,plotAreaPercentage:0.9,scaleSize:5});init(domID,getMaxValue(series),labels.length);if(opts.drawBorder){drawBorder(opts.width,opts.height);}
drawXAxis(labels);drawYAxis();var adjustedHeight=plotArea.height+opts.padding,seriesOffset=0,seriesLength=getSeriesLength(series),halfBarWidth=opts.barWidth/2,item,color;color=Raphael.leonardo.getPaletteColor({reset:true});opts.barWidth=opts.barWidth.toFixed(PREC);for(item in series){if(series.hasOwnProperty(item)){plot(series[item],function(x,y,value){var localColor=color,height=(adjustedHeight-y).toFixed(PREC);x+=seriesOffset-halfBarWidth;if(seriesLength===1){x+=plotArea.xOffset;}
paper.rect(x.toFixed(PREC),y.toFixed(PREC),opts.barWidth,height).hover(function(event){this.attr({fill:"gray"});},function(event){this.attr({fill:localColor});}).attr({title:item+": "+value,fill:localColor});});seriesOffset+=opts.barWidth;if(!(opts.singleSeriesColor)){color=Raphael.leonardo.getPaletteColor();}}}},lineChart:function(domID,series,labels,options){opts=extend(options,{width:300,height:200,padding:10,tickSize:5,drawBorder:false,plotAreaPercentage:0.9,scaleSize:5});init(domID,getMaxValue(series),labels.length);if(opts.drawBorder){drawBorder(opts.width,opts.height);}
drawXAxis(labels);drawYAxis();for(var item in series){if(series.hasOwnProperty(item)){plot(series[item],function(x,y,value){x=(x+plotArea.xOffset).toFixed(PREC);y=y.toFixed(PREC);paper.leonardo.lineTo(x,y);});}}},sparkline:function(domID,data,options){opts=extend(options,{width:300,height:200,padding:10});plotArea.x=opts.padding;plotArea.width=opts.width-(opts.padding*2);plotArea.height=opts.height;maxValue=Math.max.apply(Math,data);paper=new Raphael(domID,opts.width,opts.height);plot(data,function(x,y,value){if(value===0){y=plotArea.height;}
paper.leonardo.lineTo(x.toFixed(PREC),y.toFixed(PREC));});},oneBar:function(domID,percentageAsDecimal,options){Raphael.leonardo.getPaletteColor({reset:true});opts=extend(options,{width:300,height:200,fillColor:Raphael.leonardo.getPaletteColor()});var paddedHeight=(opts.height-2).toFixed(PREC),barWidth=(percentageAsDecimal*opts.width).toFixed(PREC),rectAttr={fill:opts.fillColor},text=(percentageAsDecimal*100).toFixed(0)+"%",textAttr={'text-anchor':'start'};paper=new Raphael(domID,opts.width,opts.height);paper.rect(0,1,barWidth,paddedHeight).attr(rectAttr);if(opts.showPercentage){paper.text(2,paddedHeight/2,text).attr(textAttr);}}};}());